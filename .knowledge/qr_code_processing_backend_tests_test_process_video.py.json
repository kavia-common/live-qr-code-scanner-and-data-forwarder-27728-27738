{"is_source_file": true, "format": "Python", "description": "This file contains unit tests for the video processing API, specifically testing the QR code detection and video download functionalities. It uses pytest and FastAPI's TestClient to simulate API requests and mocks external dependencies such as video download and detection functions.", "external_files": ["src.api.main"], "external_methods": ["src.api.main._download_video_to_temp", "src.api.main._detect_qr_from_video_file"], "published": [], "classes": [], "methods": [{"name": "test_process_video_success_scan_complete(client: TestClient, monkeypatch: pytest.MonkeyPatch)", "description": "Tests successful processing of a video with various detection parameters, mocking the download and detection functions to verify proper handling and response.", "scope": "", "scopeKind": ""}, {"name": "test_process_video_alias_flags_mapping(client: TestClient, monkeypatch: pytest.MonkeyPatch)", "description": "Verifies that alias flags are correctly mapped to the actual detection options and that the processing proceeds with the correct settings.", "scope": "", "scopeKind": ""}, {"name": "test_process_video_handles_download_failure(client: TestClient, monkeypatch: pytest.MonkeyPatch)", "description": "Ensures that the API properly handles failures during video download and returns an appropriate error response.", "scope": "", "scopeKind": ""}, {"name": "Dict[str,Any] fake_detect( path: str, max_frames: int = 1500, frame_stride: int = 5, stop_after_first: bool = True, grayscale: bool = False, adaptive_threshold: bool = False, denoise: bool = False, decoder_backend: str = \"auto\", use_opencv: bool = True, use_pyzbar: bool = True, use_zxing: bool = True, )", "scope": "test_process_video_success_scan_complete", "scopeKind": "function", "description": "unavailable"}, {"name": "Tuple[str,tempfile.TemporaryDirectory] fake_download(url: str)", "scope": "test_process_video_success_scan_complete", "scopeKind": "function", "description": "unavailable"}, {"name": "fake_download(url: str)", "scope": "test_process_video_handles_download_failure", "scopeKind": "function", "description": "unavailable"}], "calls": ["src.api.main._download_video_to_temp", "src.api.main._detect_qr_from_video_file"], "search-terms": ["pytest", "FastAPI", "QR code detection", "video processing", "mock", "unit tests", "download", "detect_qr"], "state": 2, "file_id": 20, "knowledge_revision": 117, "git_revision": "", "ctags": [{"_type": "tag", "name": "api_main", "path": "/home/kavia/workspace/code-generation/live-qr-code-scanner-and-data-forwarder-27728-27738/qr_code_processing_backend/tests/test_process_video.py", "pattern": "/^from src.api import main as api_main$/", "language": "Python", "kind": "unknown", "nameref": "unknown:main"}, {"_type": "tag", "name": "fake_detect", "path": "/home/kavia/workspace/code-generation/live-qr-code-scanner-and-data-forwarder-27728-27738/qr_code_processing_backend/tests/test_process_video.py", "pattern": "/^    def fake_detect($/", "file": true, "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "function", "signature": "( path: str, max_frames: int = 1500, frame_stride: int = 5, stop_after_first: bool = True, grayscale: bool = False, adaptive_threshold: bool = False, denoise: bool = False, decoder_backend: str = \"auto\", use_opencv: bool = True, use_pyzbar: bool = True, use_zxing: bool = True, )", "scope": "test_process_video_alias_flags_mapping", "scopeKind": "function"}, {"_type": "tag", "name": "fake_detect", "path": "/home/kavia/workspace/code-generation/live-qr-code-scanner-and-data-forwarder-27728-27738/qr_code_processing_backend/tests/test_process_video.py", "pattern": "/^    def fake_detect($/", "file": true, "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "function", "signature": "( path: str, max_frames: int = 1500, frame_stride: int = 5, stop_after_first: bool = True, grayscale: bool = False, adaptive_threshold: bool = False, denoise: bool = False, decoder_backend: str = \"auto\", use_opencv: bool = True, use_pyzbar: bool = True, use_zxing: bool = True, )", "scope": "test_process_video_success_scan_complete", "scopeKind": "function"}, {"_type": "tag", "name": "fake_download", "path": "/home/kavia/workspace/code-generation/live-qr-code-scanner-and-data-forwarder-27728-27738/qr_code_processing_backend/tests/test_process_video.py", "pattern": "/^    def fake_download(url: str) -> Tuple[str, tempfile.TemporaryDirectory]:$/", "file": true, "language": "Python", "typeref": "typename:Tuple[str,tempfile.TemporaryDirectory]", "kind": "function", "signature": "(url: str)", "scope": "test_process_video_alias_flags_mapping", "scopeKind": "function"}, {"_type": "tag", "name": "fake_download", "path": "/home/kavia/workspace/code-generation/live-qr-code-scanner-and-data-forwarder-27728-27738/qr_code_processing_backend/tests/test_process_video.py", "pattern": "/^    def fake_download(url: str) -> Tuple[str, tempfile.TemporaryDirectory]:$/", "file": true, "language": "Python", "typeref": "typename:Tuple[str,tempfile.TemporaryDirectory]", "kind": "function", "signature": "(url: str)", "scope": "test_process_video_success_scan_complete", "scopeKind": "function"}, {"_type": "tag", "name": "fake_download", "path": "/home/kavia/workspace/code-generation/live-qr-code-scanner-and-data-forwarder-27728-27738/qr_code_processing_backend/tests/test_process_video.py", "pattern": "/^    def fake_download(url: str):$/", "file": true, "language": "Python", "kind": "function", "signature": "(url: str)", "scope": "test_process_video_handles_download_failure", "scopeKind": "function"}, {"_type": "tag", "name": "test_process_video_alias_flags_mapping", "path": "/home/kavia/workspace/code-generation/live-qr-code-scanner-and-data-forwarder-27728-27738/qr_code_processing_backend/tests/test_process_video.py", "pattern": "/^def test_process_video_alias_flags_mapping(client: TestClient, monkeypatch: pytest.MonkeyPatch):$/", "language": "Python", "kind": "function", "signature": "(client: TestClient, monkeypatch: pytest.MonkeyPatch)"}, {"_type": "tag", "name": "test_process_video_handles_download_failure", "path": "/home/kavia/workspace/code-generation/live-qr-code-scanner-and-data-forwarder-27728-27738/qr_code_processing_backend/tests/test_process_video.py", "pattern": "/^def test_process_video_handles_download_failure(client: TestClient, monkeypatch: pytest.MonkeyPa/", "language": "Python", "kind": "function", "signature": "(client: TestClient, monkeypatch: pytest.MonkeyPatch)"}, {"_type": "tag", "name": "test_process_video_success_scan_complete", "path": "/home/kavia/workspace/code-generation/live-qr-code-scanner-and-data-forwarder-27728-27738/qr_code_processing_backend/tests/test_process_video.py", "pattern": "/^def test_process_video_success_scan_complete(client: TestClient, monkeypatch: pytest.MonkeyPatch/", "language": "Python", "kind": "function", "signature": "(client: TestClient, monkeypatch: pytest.MonkeyPatch)"}], "hash": "7934d1a521b716c5fa07c271355a2d9f", "format-version": 4, "code-base-name": "qr_code_processing_backend", "filename": "qr_code_processing_backend/tests/test_process_video.py", "revision_history": [{"117": ""}]}